# From "Thinking in C++, 2nd Edition, Volume 2" 
# by Bruce Eckel & Chuck Allison
# Available at http://www.BruceEckel.com
# (c)2003 MindView Inc. Copyright notice in Copyright.txt
# Automatically-generated MAKEFILE 
# For examples in directory .\C01
# Invoke with: make compiler-name
# or: make clean

ifneq ($(MAKECMDGOALS),clean)
include ../$(MAKECMDGOALS).mac
endif

.SUFFIXES : .cpp .$(OBJEXT) .exe
.cpp.$(OBJEXT) :
	$(CPP) $(CPPFLAGS) $(OFLAGS) $<


Borland:  \
	Nonlocal.exe \
	MyError.exe \
	Nonlocal2.exe \
	Autoexcp.exe \
	Basexcpt.exe \
	Terminator.exe \
	Cleanup.exe \
	Rawp.exe \
	Wrapped.exe \
	Auto_ptr.exe \
	StdExcept.exe \
	Unexpected.exe \
	SafeAssign.exe

Microsoft:  \
	Nonlocal.exe \
	MyError.exe \
	Nonlocal2.exe \
	Autoexcp.exe \
	Basexcpt.exe \
	Terminator.exe \
	Cleanup.exe \
	Rawp.exe \
	Wrapped.exe \
	Auto_ptr.exe \
	InitExcept.exe \
	FunctionTryBlock.exe \
	StdExcept.exe \
	BadException.exe \
	SafeAssign.exe

g++:  \
	Nonlocal.exe \
	MyError.exe \
	Nonlocal2.exe \
	Autoexcp.exe \
	Basexcpt.exe \
	Terminator.exe \
	Cleanup.exe \
	Rawp.exe \
	Wrapped.exe \
	Auto_ptr.exe \
	InitExcept.exe \
	FunctionTryBlock.exe \
	StdExcept.exe \
	Unexpected.exe \
	BadException.exe \
	SafeAssign.exe

edg:  \
	Nonlocal.exe \
	MyError.exe \
	Nonlocal2.exe \
	Autoexcp.exe \
	Basexcpt.exe \
	Terminator.exe \
	Cleanup.exe \
	Rawp.exe \
	Wrapped.exe \
	Auto_ptr.exe \
	InitExcept.exe \
	FunctionTryBlock.exe \
	StdExcept.exe \
	Unexpected.exe \
	BadException.exe \
	SafeAssign.exe

clean:
ifeq ($(notdir $(SHELL)),COMMAND.COM)
	del *.obj
	del *.exe
	del *.tds
	del *.o
else
	rm -f *.o *.obj *.exe *.tds
endif


Nonlocal.exe: Nonlocal.cpp

MyError.exe: MyError.cpp

Nonlocal2.exe: Nonlocal2.cpp

Autoexcp.exe: Autoexcp.cpp

Basexcpt.exe: Basexcpt.cpp

Terminator.exe: Terminator.cpp

Cleanup.exe: Cleanup.cpp

Rawp.exe: Rawp.cpp

Wrapped.exe: Wrapped.cpp

Auto_ptr.exe: Auto_ptr.cpp

InitExcept.exe: InitExcept.cpp

FunctionTryBlock.exe: FunctionTryBlock.cpp

StdExcept.exe: StdExcept.cpp

Unexpected.exe: Unexpected.cpp

BadException.exe: BadException.cpp

SafeAssign.exe: SafeAssign.cpp

